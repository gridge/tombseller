#Definition and behavior of objects in the game

= Introduction =

We need to classify the different kind of objects, and then implement each one as soon as we need it.

 Ex. We could define an _object_ in the graphic adventure that can potentially _do_ some actions (enabled in a specific implementation) and has some image/position stored.

= General thoughts =
 Here we put general requirements that we need to satisfy.

== Adventure World (!AdWorld) ==

   * We need a timer and a connected calendar. We have cycles of weeks, and each day is divided in day, evening, night.
   * Gestione della connessione causale di eventi (o la smolliamo agli oggetti?)
   * Gestione cambi di scena e filmati


== Jeff ==
   * Porta-oggetti
   * Soldi

== "Statics" Objects ==
 Referred in the following as _objects_. They are everything that can be placed on a scenario and can be interactive by the user (Jeff). 

== actions ==

 This is everything is happening, includes:
   * a sequence starts (like a movie..)
   * a sequence of pre-defined changes to objects/scenario properties
   * changes in the strategic world
  
== Interactions ==
 This is one of the most complex design issues. _How to make everything interact?_

 We need:
   * objects interacting with other objects
   * objects interacting with scenarios (and vice-versa)
   * clock interacting with objects and scenarios
   * objects triggering _actions_


== Strategic world ==
 This is another world gathering all strategic part of the game. Includes everything you can imagine... and will be defined in the future :p

= Details =

 Different class of objects needed:
   * 